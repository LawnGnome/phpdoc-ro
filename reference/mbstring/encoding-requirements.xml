<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.2 Maintainer: alexxed Status: ready -->

<chapter xml:id="mbstring.php4.req" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Cerinţe pentru codarea caracterelor în PHP</title>
 <para>
  Următoarele codări pot fi folosite în siguranţă cu PHP.
  <itemizedlist>
   <listitem>
    <para>
     Orice codare de caractere pe un singur octet,
     <itemizedlist>
      <listitem>
       <simpara>
        care are mapări compatibile ASCII (compatibile cu standardul ISO646) 
        pentru caracterele de la <literal>00h</literal> la
        <literal>7fh</literal>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </listitem>
   <listitem>
    <para>
     Orice codare de caractere pe mai mulţi octeţi,
     <itemizedlist>
      <listitem>
       <simpara>
        care are mapări compatibile ASCII pentru caracterele de la
        <literal>00h</literal> la <literal>7fh</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        care nu utilizează secvenţe de de evadare ISO2022.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        care nu folosesc o valoare de la <literal>00h</literal> la
        <literal>7fh</literal> în octeţii de compunere care reprezintă un 
        singur caracter.
       </simpara>
      </listitem>
     </itemizedlist>  
    </para>
   </listitem>
  </itemizedlist>
 </para>
 <para>
  Acestea sunt exemple de codări de caractere care probabil nu merg în PHP.
  <informalexample>
   <programlisting>
<![CDATA[
JIS, SJIS, ISO-2022-JP, BIG-5
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  Deşi s-ar putea ca scripturile PHP scrise în orice codare de mai sus 
  să nu meargă, în special în cazul în care stringuri codate apar ca identificatori
  sau literalmente în scripturi, puteţi evita alte probleme cu aceste codări setând
  conversia codării caracterelor venite prin HTTP.
 </para>
 <note>
  <para>
   Nu folosiţi SJIS, BIG5, CP936, CP949 şi GB18030 pentru codarea internă decât dacă 
   sunteţi familiarizat(ă) cu parser-ul, scanerul şi codarea de caractere.
  </para>
 </note>
 <note>
  <para>
   Dacă vă conectaţi la o bază de date cu PHP, este recomandat să folosiţi aceaşi
   codare de caractere atât pentru baza de date cât şi pentru
   <literal>codarea internă</literal> pentru uşurinţă în utilizare şi o performanţă
   mai bună.
  </para>
  <para>
   Dacă folosiţi PostgreSQL, codarea de caractere folosită în baza de date ar putea
   diferi faţă de cea folosită în PHP deoarece suportă conversia automată a setului 
   de caractere între backend şi frontend.
  </para>
 </note>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

