<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.15 Maintainer: simionea Status: translated -->
<!-- CREDITS: adiju -->
<refentry xml:id="function.import-request-variables" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>import_request_variables</refname>
  <refpurpose>Importă variabilele GET/POST/Cookie în circumstanţa globală</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>import_request_variables</methodname>
   <methodparam><type>string</type><parameter>types</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>prefix</parameter></methodparam>
  </methodsynopsis>
  <para>
   Importă variabilele GET/POST/Cookie în circumstanţa globală. Această funcţie
   este utilă dacă aţi dezactivat <link linkend="ini.register-globals">register_globals</link>,
   însă doriţi să aveţi acces la unele variabile din circumstanţa globală.
  </para>
  <para>
   Dacă vă interesează importul altor variabile în circumstanţa globală, cum ar
   fi SERVER, consideraţi utilizarea <function>extract</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>types</parameter></term>
     <listitem>
      <para>
       Utilizând parametrul <parameter>types</parameter> puteţi specifica care
       variabile de interpelare vor fi importate. Puteţi utiliza caracterele
       'G', 'P' şi 'C' respectiv pentru GET, POST şi Cookie. Nu importă dacă
       caracterele sunt majuscule sau minuscule, de aceea puteţi utiliza orice 
       combinaţie cu 'g', 'p' şi 'c'. POST include şi informaţia despre
       fişierele încărcate prin metoda POST.
      </para>
      <note>
       <para>
        Observaţi că ordinea literelor contează, de aceea la utilizarea "gp"
        variabilele POST vor acoperi variabilele GET cu acelaşi nume. Orice alte
        litere decât GPC sunt ignorate.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>prefix</parameter></term>
     <listitem>
      <para>
       Prefixul denumirilor variabilelor, plasat înaintea denumirilor tuturor
       variabilelor importate în circumstanţa globală. Deci dacă aveţi o valoare
       GET denumită "userid" şi indicaţi prefixul "pref_", atunci veţi obţine o
       variabilă globală denumită <varname>$pref_userid</varname>.
      </para>
      <note>
       <para>
        Cu toate că parametrul <parameter>prefix</parameter> este opţional, veţi
        obţine o eroare de nivel
        <link linkend="errorfunc.constants.errorlevels.e-notice">E_NOTICE</link>
        dacă nu specificaţi un prefix, sau specificaţi un string vid în calitate
        de prefix. Acesta probabil că nu este un pericol de securitate. Erorile
        de nivel notice nu sunt afişate la nivelul de <link 
        linkend="ini.error-reporting">raportare al erorilor</link> implicit.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplu <function>import_request_variables</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Aceasta va importa variabilele GET şi POST
// şi le va prefixa cu "rvar_"
import_request_variables("gp", "rvar_");

echo $rvar_foo;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><varname>$_REQUEST</varname></member>
    <member><link linkend="ini.register-globals">register_globals</link></member>
    <member><link linkend="language.variables.predefined">Variabilele predefinite</link></member>
    <member><function>extract</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
