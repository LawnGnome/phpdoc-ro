<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.20 Maintainer: simionea Status: translated -->
<!-- CREDITS: adiju -->
<refentry xml:id="function.unset" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unset</refname>
  <refpurpose>Elimină o variabilă dată</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>unset</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>unset</function> distruge variabila specificată. 
  </para>
  <para>
   Comportamentul <function>unset</function> în interiorul unei funcţii poate
   varia în dependenţă de tipul variabilei pe care încercaţi să o distrugeţi.
  </para>
  <para>
   Dacă este aplicat <function>unset</function> asupra unei variabile globale
   în interiorul unei funcţii, numai variabila locală va fi distrusă. Variabila
   din mediul apelant îşi va păstra aceeaşi valoare ca şi până la apelul
   <function>unset</function>.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function destroy_foo() 
{
    global $foo;
    unset($foo);
}

$foo = 'bar';
destroy_foo();
echo $foo;
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  &example.outputs;
  <para>
   <informalexample>
    <screen>
<![CDATA[
bar
]]>
    </screen>
   </informalexample>
  </para>
  <para>
   Dacă doriţi să aplicaţi <function>unset</function> asupra unei variabile
   globale din interiorul unei funcţii, puteţi utiliza tabloul
   <varname>$GLOBALS</varname> pentru aceasta:
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function foo() 
{
    unset($GLOBALS['bar']);
}

$bar = "ceva";
foo();
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   Dacă se aplică <function>unset</function> în interiorul unei funcţii asupra
   unei variabile care este transmisă PRIN REFERINŢĂ, numai variabila locală va
   fi distrusă. Variabila din mediul apelant îşi va păstra aceeaşi valoare ca
   şi până la apelul <function>unset</function>.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function foo(&$bar) 
{
    unset($bar);
    $bar = "blah";
}

$bar = 'ceva';
echo "$bar\n";

foo($bar);
echo "$bar\n";
?>
]]>
    </programlisting>
   </informalexample>
  </para>
   &example.outputs;
  <para>
   <informalexample>
    <screen>
<![CDATA[
ceva
ceva
]]>
    </screen>
   </informalexample>
  </para>
  <para>
   Dacă se aplică <function>unset</function> asupra unei variabile statice în
   interiorul unei funcţii, <function>unset</function> distruge variabila numai
   în contextul restului funcţiei. Apelurile următoare vor restabili valoarea
   precedentă a variabilei.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function foo()
{
    static $bar;
    $bar++;
    echo "Înainte de unset: $bar, ";
    unset($bar);
    $bar = 23;
    echo "după unset: $bar\n";
}

foo();
foo();
foo();
?>
]]>
    </programlisting>
   </informalexample>
  </para>
   &example.outputs;
  <para>
   <informalexample>
    <screen>
<![CDATA[
Înainte de unset: 1, după unset: 23
Înainte de unset: 2, după unset: 23
Înainte de unset: 3, după unset: 23
]]>
    </screen>
   </informalexample>
  </para>
 </refsect1>
  
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Variabila ce va fi eliminată.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       O altă variabilă ..
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.0</entry>
       <entry>
        <function>unset</function> a devenit o expresie. (În PHP 3,
        <function>unset</function> întotdeauna întorcea 1).
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplu <function>unset</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// distruge o singură variabilă
unset($foo);

// distruge un singur element din tablou
unset($bar['quux']);

// distruge mai multe variabile
unset($foo1, $foo2, $foo3);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Utilizarea modificatorului (unset)</title>
    <programlisting role="php">
<![CDATA[
<?php
$name = 'Felipe';

var_dump((unset) $name);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.language-construct;
  <note>
   <para>
    Este posibil de a elimina chiar şi proprietăţi ale obiectelor vizibile în
    contextul curent.
   </para>
  </note>
  <note>
   <para>
    Nu este posibil de a elimina <literal>$this</literal> în interiorul unei
    metode a unui obiect începând cu PHP 5.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>isset</function></member>
    <member><function>empty</function></member>
    <member><function>array_splice</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
