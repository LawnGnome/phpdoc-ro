<?xml version="1.0" encoding="iso-8859-2"?>
<!-- splitted from ./ro/functions/var.xml, last change in rev 1.1 -->
<!-- last change to 'serialize' in en/ tree in rev 1.28 -->
  <refentry xml:id="function.serialize" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>serialize</refname>
    <refpurpose>
     Genereazã o reprezentare liniarã a unei variabile
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descriere</title>
     <methodsynopsis>
      <type>string</type><methodname>serialize</methodname>
      <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>serialize</function> returneazã un ºir de caractere care conþine
     reprezentarea liniarã a parametrului <parameter>value</parameter>, care
     poate fi stocatã uºor sub aceastã formã.
    </simpara>
    <simpara>
     Este utilã pentru a stoca sau pentru a transmite variabile PHP
     fãrã alterarea tipului ºi structurii acestora.
    </simpara>
   <simpara>
    Pentru a reveni de la reprezentarea liniarã la cea a unei variabile PHP
    se foloseºte funcþia <function>unserialize</function>.
    <function>serialize</function> lucreazã cu toate tipurile de variabile,
    mai puþin cu tipul <type>resource</type>.
    Se poate folosi <function>serialize</function> chiar ºi pentru tablouri
    care conþin referinþe circulare (cãtre sine). Aceste referinþe
    vor fi ºi ele liniarizate ºi stocate.
   </simpara>
   <note>
    <para>
     În PHP 3, proprietãþile obiectelor sunt pãstrate, însã metodele
     se pierd. PHP 4 a eliminat aceastã limitare. Consultaþi ºi secþiunea
     <link linkend="language.oop.serialization">Liniarizarea obiectelor</link>
     a capitolului <link linkend="language.oop">Clase ºi
     obiecte</link> pentru mai multe informaþii.
    </para>
   </note>
    <para>
     <example>
      <title>Exemplu pentru funcþia <function>serialize</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// $session_data conþine un tablou multi-dimensional cu informaþii
// ale sesiunii pentru utilizatorul curent
// se foloseºte serialize() pentru a stoca acest tablou
// intr-o bazã de date la încheierea cererii

$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn,
            "UPDATE sessions SET data = ? WHERE id = ?");
$sqldata = array (serialize($session_data), $PHP_AUTH_USER);
if (!odbc_execute($stmt, &$sqldata)) {
    $stmt = odbc_prepare($conn,
                "INSERT INTO sessions (id, data) VALUES(?, ?)");
    if (!odbc_execute($stmt, &$sqldata)) {
    // ceva nu a funcþionat cum trebuie
    }
}
]]>
      </programlisting>
     </example>
    </para>
   <para>
    Mai consultaþi: <function>unserialize</function>.
   </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
