<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.28 Maintainer: simionea Status: ready -->
<!-- CREDITS: adiju -->
<!-- splitted from ./en/functions/datetime.xml, last change in rev 1.8 -->
<refentry xml:id="function.strtotime" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtotime</refname>
  <refpurpose>Translează aproape orice descriere textuală în limba engleză a datei şi orei într-un timestamp Unix</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strtotime</methodname>
   <methodparam><type>string</type><parameter>time</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>now</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Funcţia aşteaptă să i se furnizeze un şir de caractere conţinând un format al
   datei US English şi încearcă să transforme acest format într-un timestamp
   Unix (numărul de secunde de la 1 Ianuarie 1970 00:00:00 UTC), relativ la
   timestamp-ul parametrului <parameter>now</parameter>, sau ora curentă în
   cazul dacă <parameter>now</parameter> nu este furnizat.
  </simpara>
  <para>
   Această funcţie va utiliza variabila de mediu <envar>TZ</envar> (dacă este
   disponibilă) pentru a calcula timestamp-ul. Începând cu PHP 5.1.0 există
   metode mai facile de a defini fusul orar, care este utilizat de toate
   funcţiile de dată/oră. Acest proces este explicat în pagina cu descrierea
   funcţiei <function>date_default_timezone_get</function>.
  </para>
  <note>
   <para>
    Dacă anul este specificat cu două cifre, valorile între 00-69 sunt
    interpretate ca 2000-2069, iar valorile între 70-99 ca 1970-1999.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>time</parameter></term>
     <listitem>
      <para>
       String-ul pentru a fi interpretat. Înainte de PHP 5.0.0, microsecundele
       nu erau permise în oră, începând cu PHP 5.0.0 ele sunt permise, dar sunt
       ignorate.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>now</parameter></term>
     <listitem>
      <para>
       Timestamp-ul care este utilizat ca bază pentru calcularea datelor relative.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Întoarce un timestamp în caz de succes, &false; în caz contrar. Înainte de
   PHP 5.1.0, această funcţie întorcea <literal>-1</literal> în caz de eşec.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;

  &date.timezone.errors.description;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Acum întoarce &false; în caz de eşec, în loc de <literal>-1</literal>.
       </entry>
      </row>

      &date.timezone.errors.changelog;

     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplu <function>strtotime</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo strtotime("now"), "\n";
echo strtotime("10 September 2000"), "\n";
echo strtotime("+1 day"), "\n";
echo strtotime("+1 week"), "\n";
echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime("next Thursday"), "\n";
echo strtotime("last Monday"), "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Verificarea eşecului</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'Nu e bine';

// înainte de PHP 5.1.0 ar fi trebuit de comparat cu -1, în loc de false
if (($timestamp = strtotime($str)) === false) {
    echo "String-ul ($str) nu este corect";
} else {
    echo "$str == " . date('l dS \o\f F Y h:i:s A', $timestamp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    În PHP 5 până la 5.0.2, <literal>"now"</literal> şi alte denumiri relative
    erau în mod greşit calculate începând cu miezul nopţii de astăzi. Aceasta
    diferă de alte versiuni, unde sunt calculate corect, de la ora curentă.
   </para>
  </warning>
  <warning>
   <para>
    În versiunile PHP înainte de 4.4.0, <literal>"next"</literal> era calculat
    incorect ca +2. O soluţie tipică a acestei probleme este de a utiliza
    <literal>"+1"</literal>.
   </para>
  </warning>
  <note>
   <para>
    Domeniul valid al unui timestamp este de obicei de la Fri, 13 Dec 1901
    20:45:54 UTC până la Tue, 19 Jan 2038 03:14:07 UTC. (Acestea sunt datele
    ce corespund valorilor minimă şi maximă pentru un întreg pe 32 biţi cu
    semn.)
    În plus, nu toate platformele susţin timestamp-uri negative, de aceea
    domeniul datelor poate fi limitat la valorile de după Epoca Unix. Aceasta
    înseamnă că de ex. datele de până la 1 Ianuarie 1970 nu vor fi valide în
    Windows, unele distributive Linux, şi alte câteva sisteme de operare. Însă
    PHP 5.1.0 şi versiunile ulterioare depăşesc această limitare.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strptime</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
