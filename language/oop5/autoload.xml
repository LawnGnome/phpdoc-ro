<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 327202 Maintainer: radical Status: ready -->
<!-- CREDITS: simionea -->
 <sect1 xml:id="language.oop5.autoload" xmlns="http://docbook.org/ns/docbook">
  <title>Autoîncărcarea claselor</title>
  <para>
   Mulți programatori care scriu aplicații orientate pe obiecte
   crează câte un fișier PHP pentru fiecare clasă pe care o definesc.
   O problemă delicată era lista mare de fișiere ce trebuiau
   incluse la începutul fiecărui script.
  </para>
  <para>
   În PHP 5, acest lucru nu mai este necesar. Se poate defini funcția
   <function>__autoload</function> care este apelată automat în cazul
   în care doriți să folosiți o clasă care nu a fost încă definită.
   Apelul la această funcție oferă script-ului o ultimă șansă de a defini
   clasa pentru a nu termina cu eroare.
  </para>
  <tip>
   <para>
    <function>spl_autoload_register</function> oferă o alternativă mai flexibilă
    pentru autoîncărcarea claselor. Din acest motiv utilizarea
    <function>__autoload</function> nu este recomandată și poate fi considerată
    învechită sau chiar eliminată în viitor.
   </para>
  </tip>
  <note>
   <para>
    Excepțiile aruncate în __autoload nu pot fi captate într-un bloc
    <link linkend="language.exceptions">catch</link> rezultând
    astfel o eroare fatală. Din 5.3.0+ excepțiile aruncate in funcția
    __autoload pot fi captate într-un bloc <link linkend="language.exceptions">
    catch</link>, cu o mică excepție. Dacă folosiți o excepție personalizată, atunci
    clasa respectiva trebuie să fie deja încărcată. Funcția __autoload poate
    fi folosită pentru a încărca recursiv excepția personalizată.
   </para>
  </note>
  <note>
   <para>
    Această funcție specială nu este disponibilă dacă folosiți PHP în
    <link linkend="features.commandline">mod CLI interactiv</link>.
   </para>
  </note>
  <note>
   <para>
    Dacă denumirea clasei este utilizată de ex. în <function>call_user_func</function>,
    atunci ea poate conține caractere periculoase, cum ar fi <literal>../</literal>.
    Nu este recomandat să utilizați datele introduse de utilizator în asemenea funcții,
    sau, cel puțin, să verificați ce s-a introdus în <function>__autoload</function>.
   </para>
  </note>
  <para>
   <example>
    <title>Exemplu cu autoîncărcare</title>
    <para>
     Acest exemplu încearcă să încarce clasele <literal>MyClass1</literal>
     și <literal>MyClass2</literal> din fișierele <filename>MyClass1.php</filename>
     și <filename>MyClass2.php</filename>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function __autoload($class_name) {
    include $class_name . '.php';
}

$obj  = new MyClass1();
$obj2 = new MyClass2();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Un alt exemplu Autoload</title>
    <para>
     Acest exemplu încearcă să încarce interfața <literal>ITest</literal>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

function __autoload($name) {
    var_dump($name);
}

class Foo implements ITest {
}

/*
string(5) "ITest"

Fatal error: Interface 'ITest' not found in ...
*/
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Autoîncărcarea cu tratarea excepțiilor pentru 5.3.0+</title>
    <para>
     Acest exemplu aruncă o excepție și demonstrează cum se captează cu try/catch.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function __autoload($name) {
    echo "Vreau sa încarc $name.\n";
    throw new Exception("Nu pot încărca $name.");
}

try {
    $obj = new NonLoadableClass();
} catch (Exception $e) {
    echo $e->getMessage(), "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Vreau sa încarc NonLoadableClass.
Nu pot încărca NonLoadableClass.
]]>
    </screen>
   </example>
   <example>
    <title>Autoîncărcarea cu tratarea excepțiilor pentru 5.3.0+ - Fără excepție personalizată</title>
    <para>
     Acest exemplu atuncă o excepție personalizată care nu a fost încărcată încă.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function __autoload($name) {
    echo "Vreau să încarc $name.\n";
    throw new MissingException("Nu pot încărca $name.");
}

try {
    $obj = new NonLoadableClass();
} catch (Exception $e) {
    echo $e->getMessage(), "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Vreau să încarc NonLoadableClass.
Nu pot încărca  MissingException.

Fatal error: Class 'MissingException' not found in testMissingException.php on line 4
]]>
    </screen>
   </example>
  </para>

  <simplesect role="seealso">
   &reftitle.seealso;
   <para>
    <simplelist>
     <member><function>unserialize</function></member>
     <member><link linkend="unserialize-callback-func">unserialize_callback_func</link></member>
     <member><function>spl_autoload</function></member>
     <member><function>spl_autoload_register</function></member>
    </simplelist>
   </para>
  </simplesect>

 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
