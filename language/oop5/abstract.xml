<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 -->
 <sect1 xml:id="language.oop5.abstract" xmlns="http://docbook.org/ns/docbook">
  <title>Clase Abstracte</title>

  <para>
   PHP 5 introduce clase și metode abstracte. Nu este permisă crearea unei
   instanțe pentru o clasă care a fost definită drept abstractă. Orice clasă
   care conține cel puțin o metodă abstractă trebuie să fie și ea tot abstractă.
   Metodele abstracte declară doar semnătura unei metode și nu pot
   defini o implementare concretă.
  </para>

  <para>
   La moștenirea dintr-o clasă abstractă, toate metodele abstracte din
   părinte trebuie implementate; în plus, aceste metode trebuie definite cu o 
   <link linkend="language.oop5.visibility">vizibilitate</link> identică
   (sau mai puțin restrictivă). De exemplu,
   dacă metoda este definită 'protected', implementarea concretă
   trebuie să definească funcția 'protected' sau 'public', dar nu 'private'.
  </para>

  <example>
   <title>Exemplu de clasă abstractă</title>
    <programlisting role="php">
<![CDATA[
<?php
abstract class AbstractClass
{
    // Forțează implementarea în copii a următoarelor metode
    abstract protected function getValue();
    abstract protected function prefixValue($prefix);

    // Metodă comună
    public function printOut() {
        print $this->getValue() . "\n";
    }
}

class ConcreteClass1 extends AbstractClass
{
    protected function getValue() {
        return "ConcreteClass1";
    }

    public function prefixValue($prefix) {
        return "{$prefix}ConcreteClass1";
    }
}

class ConcreteClass2 extends AbstractClass
{
    public function getValue() {
        return "ConcreteClass2";
    }

    public function prefixValue($prefix) {
        return "{$prefix}ConcreteClass2";
    }
}

$class1 = new ConcreteClass1;
$class1->printOut();
echo $class1->prefixValue('FOO_') ."\n";

$class2 = new ConcreteClass2;
$class2->printOut();
echo $class2->prefixValue('FOO_') ."\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
ConcreteClass1
FOO_ConcreteClass1
ConcreteClass2
FOO_ConcreteClass2
]]>
   </screen>
  </example>

  <para>
   Codul vechi care nu are nici o clasă sau funcție definită de utilizator
   cu numele 'abstract' ar trebui să funcționeze fără modificări.
  </para>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
