<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.0 Maintainer: zamolxe Status: translated -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->
  <chapter xml:id="security.apache" xmlns="http://docbook.org/ns/docbook">
   <title>Instalat ca modul Apache</title>
   <simpara>
    Cand PHP este utilizat ca modul in Apache, el mosteneste permisiile default
    Apache (de obicei acelea ale utilizatorului "nobody"). Acest fapt are mai multe impacte
    asupra securitatii sistemului. De exemplu, daca folositi PHP 
    pentru a accesa o baza de date, si aceasta nu are management de acces inclus,
    va trebui sa faceti in asa fel incat aceasta sa fie accesibila utilizatorului "nobody".
    Aceasta inseamna ca oricine cu drepturi default "nobody" poate actiona si modifica
    baza de date, fara sa fie nevoit sa introduca username sau parola.
    Este posibil ca un robot de indexare web sa acceseze accidental panoul de administrare
    al bazei de date (ex. phpMyAdmin) si sa modifice sau sa stearga toate datele.
    Va puteti proteja cu ajutorul sistemului de autorizatie folosit de Apache,
    sau printr-un model de acces personalizat folosind LDAP, fisiere tip &htaccess; , etc.
    pe care sa le introduceti in scripturile PHP create.
   </simpara>
   <simpara>
    Adesea, dupa ce politica de securitate a fost stabilita, iar utilizatorul PHP
    (in acest caz, utilizatorul Apache) prezinta risc redus fata de sistem,
    iese la iveala faptul ca PHP este restrictionat in a scrie in fisierele si 
    directoarele utilizatorilor, sau nu poate accesa si schimba anumite baze de date.
    De asemenea, a fost securizat asemanator in a scrie fisiere bune si rele, sau
    inserarea de tranzactii benefice sau daunatoare bazelor de date.
   </simpara>
   <simpara>
    O greseala de securitate frecventa este ca atunci cand se ajunge in acest moment,
    sa se dea pemisii de root serverului Apache, sau sa se escaladeze voit privilegiile din acesta,
    pentru a facilita anumite actiuni.
   </simpara>
   <simpara>
    Escaladarea privilegiilor utilizatorilor Apache catre root este deosebit de periculoasa
    si poate duce la compromiterea intregului sistem, asa ca sudo'ing,
    chroot'ing, sau alte modalitati de a rula root nu ar trebui luate in considerare
    de catre administratorii de sistem.
   </simpara>
   <simpara>
    Exista si solutii mai simple. Utilizand
    <link linkend="ini.open-basedir">open_basedir</link> puteti controla si restrictiona
    ce directorii doriti, in care poate avea acces PHP. In plus puteti seta zone apache-only,
    pentru a restrictiona toate activitatile non-user, sau non-system, fisiere venite via web.
   </simpara>
  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
